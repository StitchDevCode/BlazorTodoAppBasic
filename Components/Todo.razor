@page "/todo"
@rendermode InteractiveServer
<PageTitle>Todo</PageTitle>

<h3>Todo List</h3>

<h2 class="badge bg-primary position-relative">
    Task

    <span class="position-absolute top-0 start-100 badge rounded-pill bg-danger translate-middle">
        @todoItems.Count(x => x.IsDone)
    </span>
</h2>

<ul>
    @foreach (var item in todoItems)
    {
        <li>
            <label>
                <input type="checkbox" @bind=(item.IsDone)/>
                @item.Title
            </label>
            <button class="btn btn-outline-danger btn-sm" @onclick="() => RemoveTodo(item)">
                <svg xmlns="http://www.w3.org/2000/svg" width="12" height="12" fill="currentColor" class="bi bi-archive-fill" viewBox="0 0 16 16">
                    <path d="M12.643 15C13.979 15 15 13.845 15 12.5V5H1v7.5C1 13.845 2.021 15 3.357 15zM5.5 7h5a.5.5 0 0 1 0 1h-5a.5.5 0 0 1 0-1M.8 1a.8.8 0 0 0-.8.8V3a.8.8 0 0 0 .8.8h14.4A.8.8 0 0 0 16 3V1.8a.8.8 0 0 0-.8-.8z" />
                </svg>
            </button>
        </li>
    }
</ul>

<form @onsubmit="AddTodo">
    <input placeholder="New Task" @bind="newTodo" />
    <button type="submit">Agregar</button>
</form>
   

@code {
    // private List<TodoItem> todos = new();
    string? newTodo;

    public void AddTodo()
    {
        if (!string.IsNullOrWhiteSpace(newTodo))
        {
            todoItems.Add(new TodoItem { Title = newTodo });
            newTodo = string.Empty;
        }
    }

    private List<TodoItem> todoItems = new List<TodoItem>()
    {
        new TodoItem {Title = "Terminar app",  IsDone = false  },
        new TodoItem {Title = "Help Desk",  IsDone = false  },
        new TodoItem {Title = "Crud Blazor",  IsDone = true  }
    };


    public void RemoveTodo(TodoItem item)
    {

        todoItems.Remove(item);

    }
}
